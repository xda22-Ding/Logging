#ifndef SYSTEM_HPP
#define SYSTEM_HPP

#include "logger.hpp"

// TRACE_LOG macro using LOGGER_LOG and passing varadic arguments
#define TRACE_ERROR(TRACE_TYPE_BITMASK, COMPONENT, FORMAT, ...) \
    TRACE_LOG(TRACE_TYPE_BITMASK, COMPONENT, log4cpp::Priority::ERROR, FORMAT, ##__VA_ARGS__)

#define TRACE_INFO(TRACE_TYPE_BITMASK, COMPONENT, FORMAT, ...) \
    TRACE_LOG(TRACE_TYPE_BITMASK, COMPONENT, log4cpp::Priority::INFO, FORMAT, ##__VA_ARGS__)

#define TRACE_DEBUG(TRACE_TYPE_BITMASK, COMPONENT, FORMAT, ...) \
    TRACE_LOG(TRACE_TYPE_BITMASK, COMPONENT, log4cpp::Priority::DEBUG, FORMAT, ##__VA_ARGS__)

#define TRACE_WARN(TRACE_TYPE_BITMASK, COMPONENT, FORMAT, ...) \
    TRACE_LOG(TRACE_TYPE_BITMASK, COMPONENT, log4cpp::Priority::WARN, FORMAT, ##__VA_ARGS__)

// TRACE_LOG macro definition
#define TRACE_LOG(TRACE_TYPE_BITMASK, COMPONENT, PRIORITY, FORMAT, ...) \
    LOGGER_LOG(TRACE_TYPE_BITMASK, COMPONENT, PRIORITY, FORMAT, ##__VA_ARGS__)

#endif